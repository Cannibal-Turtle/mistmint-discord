name: Check RSS & Send to Discord

on:
  repository_dispatch:
    types: [trigger-discord-notify]
  schedule:
    - cron: '0 15 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  arc_checker:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'paid')
    concurrency:
      group: rss-to-discord-arc
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install feedparser requests
          pip install --upgrade git+https://github.com/Cannibal-Turtle/rss-feed.git@main

      - name: Run Arc Checker
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          # Per-novel thread IDs (add more as you add novels)
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: python new_arc_checker.py

  extra_checker:
    runs-on: ubuntu-latest
    needs: arc_checker
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'paid')
    concurrency:
      group: rss-to-discord-extra
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install feedparser requests
          pip install --upgrade git+https://github.com/Cannibal-Turtle/rss-feed.git@main

      - name: Run Extra Checker
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: python new_extra_checker.py

      - name: Commit updated state.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || echo "nothing to rebase"
          git add state.json
          git commit -m "ci: update extras state" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  paid_completion:
    runs-on: ubuntu-latest
    needs: extra_checker
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'paid')
    concurrency:
      group: rss-to-discord-paid-completion
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install feedparser requests python-dateutil
          pip install --upgrade git+https://github.com/Cannibal-Turtle/rss-feed.git@main

      - name: Run Paid Completion Checker
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: python completed_novel_checker.py --feed paid

      - name: Commit updated state.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || echo "nothing to rebase"
          git add state.json
          git commit -m "ci: update completion state" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  free_completion:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'free')
    concurrency:
      group: rss-to-discord-free-completion
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install feedparser requests python-dateutil
          pip install --upgrade git+https://github.com/Cannibal-Turtle/rss-feed.git@main

      - name: Run Free Completion Checker
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: python completed_novel_checker.py --feed free

      - name: Commit updated state.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || echo "nothing to rebase"
          git add state.json
          git commit -m "ci: update completion state" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  new_launch_checker:
    runs-on: ubuntu-latest
    needs: free_completion
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'free')
    concurrency:
      group: rss-to-discord-new-launch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install feedparser requests python-dateutil
          pip install --upgrade git+https://github.com/Cannibal-Turtle/rss-feed.git@main

      - name: "Debug: can the bot see the thread?"
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: |
          set -e
          echo "1) GET channel (thread) object"
          curl -sS -D /tmp/h1.txt -o /tmp/b1.txt \
            -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
            "https://discord.com/api/v10/channels/${TDLBKGC_THREAD_ID}" || true
          echo "---- headers ----"; cat /tmp/h1.txt
          echo "---- body ----";    cat /tmp/b1.txt
      
      - name: Join thread (bots must be members)
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: |
          # Expect 204 No Content if successful
          curl -sS -X PUT -i \
            -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
            "https://discord.com/api/v10/channels/${TDLBKGC_THREAD_ID}/thread-members/@me" || true
      
      - name: Probe send after join
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: |
          curl -sS -X POST -i \
            -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"content":"probe: hello from CI"}' \
            "https://discord.com/api/v10/channels/${TDLBKGC_THREAD_ID}/messages" || true

      - name: Run New Launch Checker
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          TDLBKGC_THREAD_ID: ${{ secrets.TDLBKGC_THREAD_ID }}
        run: python new_novel_checker.py --feed free

      - name: Commit updated state.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || echo "nothing to rebase"
          git add state.json
          git commit -m "ci: update launch state" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

